#pragma once

#include "basic.h"

#include <array>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

constexpr i64    size_offer = 20;   // предложений продажи, предложений покупки ( ВСЕГО = size_offer * 2 );
constexpr double c_unpak    = 0.01; // распаковка цен
constexpr double c_pak      = 100;  // упаковка цен

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct _offer
{
	int price;
	int number;

	auto operator<=>(const _offer&) const = default;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct _offers: public std::array<_offer, size_offer>
{
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct _supply_and_demand // предложение и спрос
{
	_offers demand; // покупка, спрос
	_offers supply; // продажа, предложение
	time_t  time;

	bool operator==(const _supply_and_demand& p) const; // время не учитывается при сравнении

	void   clear()                { time = 0; } // метка пустого прайса
	bool   empty()          const { return time == 0; } // проверка на пустоту 
	time_t time_to_minute() const { return time - (time % 60); } // обнулить секунды
	i64    time_hour();
	i64    time_minute();
	bool valid(); // оценка валидности данных
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct _g_terminal& operator << (_g_terminal& t, const _supply_and_demand& sd);
struct _e_terminal& operator << (_e_terminal& t, const _supply_and_demand& sd);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

std::wstring& mmm1();
std::wstring& mmm2();
std::wstring& mmm3();

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
